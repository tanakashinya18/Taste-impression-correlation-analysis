# -*- coding: utf-8 -*-
"""印象味覚相関.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XVSAhRlkMjOc4dSY-HqDPCQQN8WrZ12X
"""

import pandas as pd
from scipy.stats import linregress
import matplotlib.pyplot as plt

# エクセルファイル名とシート名を指定
stress_file = "印象評価（相関関係）.xlsx"
impression_file = "味覚評価（相関関係）.xlsx"
stress_sheet = "苦味"
impression_sheet = "苦味"
target_color = "無"

# エクセルデータの読み込み
stress_df = pd.read_excel(stress_file, sheet_name=stress_sheet, index_col=0, usecols="A:M", nrows=7)
impression_df = pd.read_excel(impression_file, sheet_name=impression_sheet, index_col=0, usecols="A:M", nrows=7)

# データを転置して被験者ごとに列を揃える
stress_df = stress_df.T
impression_df = impression_df.T

# 相関係数の記録用リスト
correlation_results = []

# 各色ごとにグラフを作成
for color in stress_df.columns:
    # 各色のデータ取得
    stress_values = stress_df[color].dropna()
    impression_values = impression_df[color].dropna()

    # データが不足している場合はスキップ
    if len(stress_values) < 2 or len(impression_values) < 2:
        continue

    # 線形回帰を計算（データ可視化用に使用）
    slope, intercept, r_value, _, _ = linregress(impression_values, stress_values)

    # 相関係数をリストに保存
    correlation_results.append({
        "Color": color,
        "Pearson Correlation": round(r_value, 2)  # ピアソンの相関係数
    })

    # グラフの作成
    plt.figure(figsize=(6, 4))  # 各グラフのサイズを指定
    plt.scatter(impression_values, stress_values, alpha=0.7)
    if(f"{color}"=="赤"):
        target_color = "red"
    elif(f"{color}"=="青"):
        target_color = "blue"
    elif(f"{color}"=="緑"):
      target_color = "green"
    elif(f"{color}"=="ピンク"):
      target_color = "pink"
    elif(f"{color}"=="黄"):
      target_color = "yellow"
    elif(f"{color}"=="橙"):
      target_color = "orange"
    # 回帰直線
    x_range = [-3, 3]
    y_start = slope * x_range[0] + intercept
    y_end = slope * x_range[1] + intercept
    plt.plot(x_range, [y_start, y_end], color="magenta", linestyle="--")

    # 軸設定
    plt.axhline(0, color="gray", linestyle="--", linewidth=0.8)
    plt.axvline(0, color="gray", linestyle="--", linewidth=0.8)
    plt.xlabel('Taste')
    plt.ylabel('Impression')
    plt.title(f"{target_color} (r={round(r_value, 2)})") # 相関係数をタイトルに表示
    plt.ylim(-3, 3)
    plt.xlim(-3, 3)

    # グラフを保存
    plt.savefig(f"{color}_苦味_印象と味覚.png", bbox_inches="tight", dpi=300)
    plt.show()

# 相関係数の結果をCSVに保存
correlation_df = pd.DataFrame(correlation_results)
correlation_df.to_csv("相関係数_苦味_印象と味覚.csv", index=False)

print("グラフが作成され、相関係数がCSVに保存されました。")